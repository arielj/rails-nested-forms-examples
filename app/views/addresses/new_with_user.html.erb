<h1>New Address with nested User</h1>

<p>
  You can create nested forms using as the main object any of the objects, it doesn't
  matter which one `has_one` and which one `belongs_to`.
</p>

<%= simple_form_for @address, url: url_for(action: :create_with_user), html: {class: 'address_form_with_user'} do |f| %>
  <fieldset>
    <h3>Address fields</h3>
    <%= f.input :street %>
    <%= f.input :number %>
    <%= f.input :zip_code %>

    <div>
      <h3>User fields</h3>

      <%
        # this works just like `fields_for`, I just use `simple_fields_for` for convenience when showing the inputs

        # you can use "f.fields_for :address, include_id: false do |fa|" if you don't use simple_form

        # added "include_id: false" so the form does not include the ID
        # it's not needed in this case, check model config "update_only: true"
      %>
      <%= f.simple_fields_for :user, include_id: false do |fu| %>
        <%= fu.input :name %>
        <%= fu.input :lastname %>
        <%= fu.input :email %>
      <% end %>
    </div>
  </fieldset>

  <%= f.submit class: 'btn btn-primary' %>
<% end %>